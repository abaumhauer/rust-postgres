var searchIndex = {};
searchIndex['postgres'] = {"items":[[0,"","postgres","Rust-Postgres is a pure-Rust frontend for the popular PostgreSQL database. It\nexposes a high level interface in the vein of JDBC or Go's `database/sql`\npackage.",null,null],[3,"UserInfo","","Authentication information.",null,null],[12,"user","","The username",0,null],[12,"password","","An optional password",0,null],[3,"ConnectParams","","Information necessary to open a new connection to a Postgres server.",null,null],[12,"target","","The target server",1,null],[12,"port","","The target port.",1,null],[12,"user","","The user to login as.",1,null],[12,"database","","The database to connect to. Defaults the value of `user`.",1,null],[12,"options","","Runtime parameters to be passed to the Postgres backend.",1,null],[3,"LoggingNoticeHandler","","A notice handler which logs at the `info` level.",null,null],[3,"CancelData","","Contains information necessary to cancel queries for a session.",null,null],[12,"process_id","","The process ID of the session.",2,null],[12,"secret_key","","The secret key for the session.",2,null],[3,"Connection","","A connection to a Postgres database.",null,null],[3,"Transaction","","Represents a transaction on a database connection.",null,null],[4,"ConnectTarget","","Specifies the target server to connect to.",null,null],[13,"Tcp","","Connect via TCP to the specified host.",3,null],[13,"Unix","","Connect via a Unix domain socket in the specified directory.",3,null],[4,"IsolationLevel","","An enumeration of transaction isolation levels.",null,null],[13,"ReadUncommitted","","The \"read uncommitted\" level.",4,null],[13,"ReadCommitted","","The \"read committed\" level.",4,null],[13,"RepeatableRead","","The \"repeatable read\" level.",4,null],[13,"Serializable","","The \"serializable\" level.",4,null],[4,"SslMode","","Specifies the SSL support requested for a new connection.",null,null],[13,"None","","The connection will not use SSL.",5,null],[13,"Prefer","","The connection will use SSL if the backend supports it.",5,null],[13,"Require","","The connection must use SSL.",5,null],[5,"cancel_query","","Attempts to cancel an in-progress query.",null,{"inputs":[{"name":"t"},{"name":"sslmode"},{"name":"canceldata"}],"output":{"name":"result"}}],[0,"error","","Error types.",null,null],[3,"DbError","postgres::error","A Postgres error or notice.",null,null],[4,"SqlState","","SQLSTATE error codes",null,null],[13,"SuccessfulCompletion","","`00000`",6,null],[13,"Warning","","`01000`",6,null],[13,"DynamicResultSetsReturned","","`0100C`",6,null],[13,"ImplicitZeroBitPadding","","`01008`",6,null],[13,"NullValueEliminatedInSetFunction","","`01003`",6,null],[13,"PrivilegeNotGranted","","`01007`",6,null],[13,"PrivilegeNotRevoked","","`01006`",6,null],[13,"StringDataRightTruncationWarning","","`01004`",6,null],[13,"DeprecatedFeature","","`01P01`",6,null],[13,"NoData","","`02000`",6,null],[13,"NoAdditionalDynamicResultSetsReturned","","`02001`",6,null],[13,"SqlStatementNotYetComplete","","`03000`",6,null],[13,"ConnectionException","","`08000`",6,null],[13,"ConnectionDoesNotExist","","`08003`",6,null],[13,"ConnectionFailure","","`08006`",6,null],[13,"SqlclientUnableToEstablishSqlconnection","","`08001`",6,null],[13,"SqlserverRejectedEstablishmentOfSqlconnection","","`08004`",6,null],[13,"TransactionResolutionUnknown","","`08007`",6,null],[13,"ProtocolViolation","","`08P01`",6,null],[13,"TriggeredActionException","","`09000`",6,null],[13,"FeatureNotSupported","","`0A000`",6,null],[13,"InvalidTransactionInitiation","","`0B000`",6,null],[13,"LocatorException","","`0F000`",6,null],[13,"InvalidLocatorException","","`0F001`",6,null],[13,"InvalidGrantor","","`0L000`",6,null],[13,"InvalidGrantOperation","","`0LP01`",6,null],[13,"InvalidRoleSpecification","","`0P000`",6,null],[13,"DiagnosticsException","","`0Z000`",6,null],[13,"StackedDiagnosticsAccessedWithoutActiveHandler","","`0Z002`",6,null],[13,"CaseNotFound","","`20000`",6,null],[13,"CardinalityViolation","","`21000`",6,null],[13,"DataException","","`22000`",6,null],[13,"ArraySubscriptError","","`2202E`",6,null],[13,"CharacterNotInRepertoire","","`22021`",6,null],[13,"DatetimeFieldOverflow","","`22008`",6,null],[13,"DivisionByZero","","`22012`",6,null],[13,"ErrorInAssignment","","`22005`",6,null],[13,"EscapeCharacterConflict","","`2200B`",6,null],[13,"IndicatorOverflow","","`22022`",6,null],[13,"IntervalFieldOverflow","","`22015`",6,null],[13,"InvalidArgumentForLogarithm","","`2201E`",6,null],[13,"InvalidArgumentForNtileFunction","","`22014`",6,null],[13,"InvalidArgumentForNthValueFunction","","`22016`",6,null],[13,"InvalidArgumentForPowerFunction","","`2201F`",6,null],[13,"InvalidArgumentForWidthBucketFunction","","`2201G`",6,null],[13,"InvalidCharacterValueForCast","","`22018`",6,null],[13,"InvalidDatetimeFormat","","`22007`",6,null],[13,"InvalidEscapeCharacter","","`22019`",6,null],[13,"InvalidEscapeOctet","","`2200D`",6,null],[13,"InvalidEscapeSequence","","`22025`",6,null],[13,"NonstandardUseOfEscapeCharacter","","`22P06`",6,null],[13,"InvalidIndicatorParameterValue","","`22010`",6,null],[13,"InvalidParameterValue","","`22023`",6,null],[13,"InvalidRegularExpression","","`2201B`",6,null],[13,"InvalidRowCountInLimitClause","","`2201W`",6,null],[13,"InvalidRowCountInResultOffsetClause","","`2201X`",6,null],[13,"InvalidTimeZoneDisplacementValue","","`22009`",6,null],[13,"InvalidUseOfEscapeCharacter","","`2200C`",6,null],[13,"MostSpecificTypeMismatch","","`2200G`",6,null],[13,"NullValueNotAllowedData","","`22004`",6,null],[13,"NullValueNoIndicatorParameter","","`22002`",6,null],[13,"NumericValueOutOfRange","","`22003`",6,null],[13,"StringDataLengthMismatch","","`22026`",6,null],[13,"StringDataRightTruncationException","","`22001`",6,null],[13,"SubstringError","","`22011`",6,null],[13,"TrimError","","`22027`",6,null],[13,"UnterminatedCString","","`22024`",6,null],[13,"ZeroLengthCharacterString","","`2200F`",6,null],[13,"FloatingPointException","","`22P01`",6,null],[13,"InvalidTextRepresentation","","`22P02`",6,null],[13,"InvalidBinaryRepresentation","","`22P03`",6,null],[13,"BadCopyFileFormat","","`22P04`",6,null],[13,"UntranslatableCharacter","","`22P05`",6,null],[13,"NotAnXmlDocument","","`2200L`",6,null],[13,"InvalidXmlDocument","","`2200M`",6,null],[13,"InvalidXmlContent","","`2200N`",6,null],[13,"InvalidXmlComment","","`2200S`",6,null],[13,"InvalidXmlProcessingInstruction","","`2200T`",6,null],[13,"IntegrityConstraintViolation","","`23000`",6,null],[13,"RestrictViolation","","`23001`",6,null],[13,"NotNullViolation","","`23502`",6,null],[13,"ForeignKeyViolation","","`23503`",6,null],[13,"UniqueViolation","","`23505`",6,null],[13,"CheckViolation","","`23514`",6,null],[13,"ExclusionViolation","","`32P01`",6,null],[13,"InvalidCursorState","","`24000`",6,null],[13,"InvalidTransactionState","","`25000`",6,null],[13,"ActiveSqlTransaction","","`25001`",6,null],[13,"BranchTransactionAlreadyActive","","`25002`",6,null],[13,"HeldCursorRequiresSameIsolationLevel","","`25008`",6,null],[13,"InappropriateAccessModeForBranchTransaction","","`25003`",6,null],[13,"InappropriateIsolationLevelForBranchTransaction","","`25004`",6,null],[13,"NoActiveSqlTransactionForBranchTransaction","","`25005`",6,null],[13,"ReadOnlySqlTransaction","","`25006`",6,null],[13,"SchemaAndDataStatementMixingNotSupported","","`25007`",6,null],[13,"NoActiveSqlTransaction","","`25P01`",6,null],[13,"InFailedSqlTransaction","","`25P02`",6,null],[13,"InvalidSqlStatementName","","`26000`",6,null],[13,"TriggeredDataChangeViolation","","`27000`",6,null],[13,"InvalidAuthorizationSpecification","","`28000`",6,null],[13,"InvalidPassword","","`28P01`",6,null],[13,"DependentPrivilegeDescriptorsStillExist","","`2B000`",6,null],[13,"DependentObjectsStillExist","","`2BP01`",6,null],[13,"InvalidTransactionTermination","","`2D000`",6,null],[13,"SqlRoutineException","","`2F000`",6,null],[13,"FunctionExecutedNoReturnStatement","","`2F005`",6,null],[13,"ModifyingSqlDataNotPermittedSqlRoutine","","`2F002`",6,null],[13,"ProhibitedSqlStatementAttemptedSqlRoutine","","`2F003`",6,null],[13,"ReadingSqlDataNotPermittedSqlRoutine","","`2F004`",6,null],[13,"InvalidCursorName","","`34000`",6,null],[13,"ExternalRoutineException","","`38000`",6,null],[13,"ContainingSqlNotPermitted","","`38001`",6,null],[13,"ModifyingSqlDataNotPermittedExternalRoutine","","`38002`",6,null],[13,"ProhibitedSqlStatementAttemptedExternalRoutine","","`38003`",6,null],[13,"ReadingSqlDataNotPermittedExternalRoutine","","`38004`",6,null],[13,"ExternalRoutineInvocationException","","`39000`",6,null],[13,"InvalidSqlstateReturned","","`39001`",6,null],[13,"NullValueNotAllowedExternalRoutine","","`39004`",6,null],[13,"TriggerProtocolViolated","","`39P01`",6,null],[13,"SrfProtocolViolated","","`39P02`",6,null],[13,"SavepointException","","`3B000`",6,null],[13,"InvalidSavepointException","","`3B001`",6,null],[13,"InvalidCatalogName","","`3D000`",6,null],[13,"InvalidSchemaName","","`3F000`",6,null],[13,"TransactionRollback","","`40000`",6,null],[13,"TransactionIntegrityConstraintViolation","","`40002`",6,null],[13,"SerializationFailure","","`40001`",6,null],[13,"StatementCompletionUnknown","","`40003`",6,null],[13,"DeadlockDetected","","`40P01`",6,null],[13,"SyntaxErrorOrAccessRuleViolation","","`42000`",6,null],[13,"SyntaxError","","`42601`",6,null],[13,"InsufficientPrivilege","","`42501`",6,null],[13,"CannotCoerce","","`42846`",6,null],[13,"GroupingError","","`42803`",6,null],[13,"WindowingError","","`42P20`",6,null],[13,"InvalidRecursion","","`42P19`",6,null],[13,"InvalidForeignKey","","`42830`",6,null],[13,"InvalidName","","`42602`",6,null],[13,"NameTooLong","","`42622`",6,null],[13,"ReservedName","","`42939`",6,null],[13,"DatatypeMismatch","","`42804`",6,null],[13,"IndeterminateDatatype","","`42P18`",6,null],[13,"CollationMismatch","","`42P21`",6,null],[13,"IndeterminateCollation","","`42P22`",6,null],[13,"WrongObjectType","","`42809`",6,null],[13,"UndefinedColumn","","`42703`",6,null],[13,"UndefinedFunction","","`42883`",6,null],[13,"UndefinedTable","","`42P01`",6,null],[13,"UndefinedParameter","","`42P02`",6,null],[13,"UndefinedObject","","`42704`",6,null],[13,"DuplicateColumn","","`42701`",6,null],[13,"DuplicateCursor","","`42P03`",6,null],[13,"DuplicateDatabase","","`42P04`",6,null],[13,"DuplicateFunction","","`42723`",6,null],[13,"DuplicatePreparedStatement","","`42P05`",6,null],[13,"DuplicateSchema","","`42P06`",6,null],[13,"DuplicateTable","","`42P07`",6,null],[13,"DuplicateAliaas","","`42712`",6,null],[13,"DuplicateObject","","`42710`",6,null],[13,"AmbiguousColumn","","`42702`",6,null],[13,"AmbiguousFunction","","`42725`",6,null],[13,"AmbiguousParameter","","`42P08`",6,null],[13,"AmbiguousAlias","","`42P09`",6,null],[13,"InvalidColumnReference","","`42P10`",6,null],[13,"InvalidColumnDefinition","","`42611`",6,null],[13,"InvalidCursorDefinition","","`42P11`",6,null],[13,"InvalidDatabaseDefinition","","`42P12`",6,null],[13,"InvalidFunctionDefinition","","`42P13`",6,null],[13,"InvalidPreparedStatementDefinition","","`42P14`",6,null],[13,"InvalidSchemaDefinition","","`42P15`",6,null],[13,"InvalidTableDefinition","","`42P16`",6,null],[13,"InvalidObjectDefinition","","`42P17`",6,null],[13,"WithCheckOptionViolation","","`44000`",6,null],[13,"InsufficientResources","","`53000`",6,null],[13,"DiskFull","","`53100`",6,null],[13,"OutOfMemory","","`53200`",6,null],[13,"TooManyConnections","","`53300`",6,null],[13,"ConfigurationLimitExceeded","","`53400`",6,null],[13,"ProgramLimitExceeded","","`54000`",6,null],[13,"StatementTooComplex","","`54001`",6,null],[13,"TooManyColumns","","`54011`",6,null],[13,"TooManyArguments","","`54023`",6,null],[13,"ObjectNotInPrerequisiteState","","`55000`",6,null],[13,"ObjectInUse","","`55006`",6,null],[13,"CantChangeRuntimeParam","","`55P02`",6,null],[13,"LockNotAvailable","","`55P03`",6,null],[13,"OperatorIntervention","","`57000`",6,null],[13,"QueryCanceled","","`57014`",6,null],[13,"AdminShutdown","","`57P01`",6,null],[13,"CrashShutdown","","`57P02`",6,null],[13,"CannotConnectNow","","`57P03`",6,null],[13,"DatabaseDropped","","`57P04`",6,null],[13,"SystemError","","`58000`",6,null],[13,"IoError","","`58030`",6,null],[13,"UndefinedFile","","`58P01`",6,null],[13,"DuplicateFile","","`58P02`",6,null],[13,"ConfigFileError","","`F0000`",6,null],[13,"LockFileExists","","`F0001`",6,null],[13,"FdwError","","`HV000`",6,null],[13,"FdwColumnNameNotFound","","`HV005`",6,null],[13,"FdwDynamicParameterValueNeeded","","`HV002`",6,null],[13,"FdwFunctionSequenceError","","`HV010`",6,null],[13,"FdwInconsistentDescriptorInformation","","`HV021`",6,null],[13,"FdwInvalidAttributeValue","","`HV024`",6,null],[13,"FdwInvalidColumnName","","`HV007`",6,null],[13,"FdwInvalidColumnNumber","","`HV008`",6,null],[13,"FdwInvalidDataType","","`HV004`",6,null],[13,"FdwInvalidDataTypeDescriptors","","`HV006`",6,null],[13,"FdwInvalidDescriptorFieldIdentifier","","`HV091`",6,null],[13,"FdwInvalidHandle","","`HV00B`",6,null],[13,"FdwInvalidOptionIndex","","`HV00C`",6,null],[13,"FdwInvalidOptionName","","`HV00D`",6,null],[13,"FdwInvalidStringLengthOrBufferLength","","`HV090`",6,null],[13,"FdwInvalidStringFormat","","`HV00A`",6,null],[13,"FdwInvalidUseOfNullPointer","","`HV009`",6,null],[13,"FdwTooManyHandles","","`HV014`",6,null],[13,"FdwOutOfMemory","","`HV001`",6,null],[13,"FdwNoSchemas","","`HV00P`",6,null],[13,"FdwOptionNameNotFound","","`HV00J`",6,null],[13,"FdwReplyHandle","","`HV00K`",6,null],[13,"FdwSchemaNotFound","","`HV00Q`",6,null],[13,"FdwTableNotFound","","`HV00R`",6,null],[13,"FdwUnableToCreateExcecution","","`HV00L`",6,null],[13,"FdwUnableToCreateReply","","`HV00M`",6,null],[13,"FdwUnableToEstablishConnection","","`HV00N`",6,null],[13,"PlpgsqlError","","`P0000`",6,null],[13,"RaiseException","","`P0001`",6,null],[13,"NoDataFound","","`P0002`",6,null],[13,"TooManyRows","","`P0003`",6,null],[13,"InternalError","","`XX000`",6,null],[13,"DataCorrupted","","`XX001`",6,null],[13,"IndexCorrupted","","`XX002`",6,null],[13,"Unknown","","An unknown code",6,null],[4,"ConnectError","","Reasons a new Postgres connection could fail.",null,null],[13,"BadConnectParams","","An error creating `ConnectParams`.",7,null],[13,"MissingUser","","The `ConnectParams` was missing a user.",7,null],[13,"DbError","","An error from the Postgres server itself.",7,null],[13,"MissingPassword","","A password was required but not provided in the `ConnectParams`.",7,null],[13,"UnsupportedAuthentication","","The Postgres server requested an authentication method not supported\nby the driver.",7,null],[13,"NoSslSupport","","The Postgres server does not support SSL encryption.",7,null],[13,"SslError","","An error initializing the SSL session.",7,null],[13,"IoError","","An error communicating with the server.",7,null],[4,"ErrorPosition","","Represents the position of an error in a query.",null,null],[13,"Normal","","A position in the original query.",8,null],[13,"Internal","","A position in an internally generated query.",8,null],[12,"position","postgres::error::ErrorPosition","The byte position.",8,null],[12,"query","","A query generated by the Postgres server.",8,null],[4,"Error","postgres::error","An error encountered when communicating with the Postgres server.",null,null],[13,"DbError","","An error reported by the Postgres server.",9,null],[13,"IoError","","An error communicating with the Postgres server.",9,null],[13,"WrongType","","An attempt was made to convert between incompatible Rust and Postgres\ntypes.",9,null],[13,"InvalidColumn","","An attempt was made to read from a column that does not exist.",9,null],[13,"Conversion","","An error converting between Postgres and Rust types.",9,null],[11,"clone","","",6,{"inputs":[{"name":"sqlstate"}],"output":{"name":"sqlstate"}}],[11,"eq","","",6,{"inputs":[{"name":"sqlstate"},{"name":"sqlstate"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"sqlstate"},{"name":"sqlstate"}],"output":{"name":"bool"}}],[11,"from_code","","Creates a `SqlState` from its error code.",6,{"inputs":[{"name":"sqlstate"},{"name":"string"}],"output":{"name":"sqlstate"}}],[11,"code","","Returns the error code corresponding to the `SqlState`.",6,{"inputs":[{"name":"sqlstate"}],"output":{"name":"str"}}],[11,"fmt","","",6,{"inputs":[{"name":"sqlstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"dberror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"dberror"},{"name":"dberror"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"dberror"},{"name":"dberror"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"dberror"}],"output":{"name":"dberror"}}],[11,"severity","","The field contents are ERROR, FATAL, or PANIC (in an error message),\nor WARNING, NOTICE, DEBUG, INFO, or LOG (in a notice message), or a\nlocalized translation of one of these.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"str"}}],[11,"code","","The SQLSTATE code for the error.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"sqlstate"}}],[11,"message","","The primary human-readable error message. This should be accurate but\nterse (typically one line).",10,{"inputs":[{"name":"dberror"}],"output":{"name":"str"}}],[11,"detail","","An optional secondary error message carrying more detail about the\nproblem. Might run to multiple lines.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"hint","","An optional suggestion what to do about the problem. This is intended\nto differ from Detail in that it offers advice (potentially\ninappropriate) rather than hard facts. Might run to multiple lines.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"position","","An optional error cursor position into either the original query string\nor an internally generated query.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"where_","","An indication of the context in which the error occurred. Presently\nthis includes a call stack traceback of active procedural language\nfunctions and internally-generated queries. The trace is one entry per\nline, most recent first.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"schema","","If the error was associated with a specific database object, the name\nof the schema containing that object, if any. (PostgreSQL 9.3+)",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"table","","If the error was associated with a specific table, the name of the\ntable. (Refer to the schema name field for the name of the table's\nschema.) (PostgreSQL 9.3+)",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"column","","If the error was associated with a specific table column, the name of\nthe column. (Refer to the schema and table name fields to identify the\ntable.) (PostgreSQL 9.3+)",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"datatype","","If the error was associated with a specific data type, the name of the\ndata type. (Refer to the schema name field for the name of the data\ntype's schema.) (PostgreSQL 9.3+)",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"constraint","","If the error was associated with a specific constraint, the name of the\nconstraint. Refer to fields listed above for the associated table or\ndomain. (For this purpose, indexes are treated as constraints, even if\nthey weren't created with constraint syntax.) (PostgreSQL 9.3+)",10,{"inputs":[{"name":"dberror"}],"output":{"name":"option"}}],[11,"file","","The file name of the source-code location where the error was reported.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"str"}}],[11,"line","","The line number of the source-code location where the error was\nreported.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"u32"}}],[11,"routine","","The name of the source-code routine reporting the error.",10,{"inputs":[{"name":"dberror"}],"output":{"name":"str"}}],[11,"fmt","","",10,{"inputs":[{"name":"dberror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",10,{"inputs":[{"name":"dberror"}],"output":{"name":"str"}}],[11,"fmt","","",7,{"inputs":[{"name":"connecterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"connecterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"connecterror"}],"output":{"name":"str"}}],[11,"cause","","",7,{"inputs":[{"name":"connecterror"}],"output":{"name":"option"}}],[11,"from","","",7,{"inputs":[{"name":"connecterror"},{"name":"error"}],"output":{"name":"connecterror"}}],[11,"from","","",7,{"inputs":[{"name":"connecterror"},{"name":"dberror"}],"output":{"name":"connecterror"}}],[11,"from","","",7,{"inputs":[{"name":"connecterror"},{"name":"error"}],"output":{"name":"connecterror"}}],[11,"fmt","","",8,{"inputs":[{"name":"errorposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"errorposition"},{"name":"errorposition"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"errorposition"},{"name":"errorposition"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"errorposition"}],"output":{"name":"errorposition"}}],[11,"fmt","","",9,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",9,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from","","",9,{"inputs":[{"name":"error"},{"name":"dberror"}],"output":{"name":"error"}}],[11,"from","","",9,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",9,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","std::io::error","",11,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[0,"io","postgres","Types and traits for SSL adaptors.",null,null],[3,"Stream","postgres::io","A connection to the Postgres server.",null,null],[11,"get_ref","openssl::ssl","",12,{"inputs":[{"name":"sslstream"}],"output":{"name":"stream"}}],[11,"get_mut","","",12,{"inputs":[{"name":"sslstream"}],"output":{"name":"stream"}}],[11,"negotiate_ssl","","",13,{"inputs":[{"name":"sslcontext"},{"name":"str"},{"name":"stream"}],"output":{"name":"result"}}],[8,"StreamWrapper","postgres::io","A trait implemented by SSL adaptors.",null,null],[10,"get_ref","","Returns a reference to the underlying `Stream`.",14,{"inputs":[{"name":"streamwrapper"}],"output":{"name":"stream"}}],[10,"get_mut","","Returns a mutable reference to the underlying `Stream`.",14,{"inputs":[{"name":"streamwrapper"}],"output":{"name":"stream"}}],[8,"NegotiateSsl","","A trait implemented by types that can negotiate SSL over a Postgres stream.",null,null],[10,"negotiate_ssl","","Negotiates an SSL session, returning a wrapper around the provided\nstream.",15,{"inputs":[{"name":"negotiatessl"},{"name":"str"},{"name":"stream"}],"output":{"name":"result"}}],[0,"rows","postgres","Query result rows.",null,null],[3,"Rows","postgres::rows","The resulting rows of a query.",null,null],[3,"Iter","","An iterator over `Row`s.",null,null],[3,"IntoIter","","An owning iterator over `Row`s.",null,null],[3,"Row","","A single result row of a query.",null,null],[3,"LazyRows","","A lazily-loaded iterator over the resulting rows of a query.",null,null],[8,"RowIndex","","A trait implemented by types that can index into columns of a row.",null,null],[10,"idx","","Returns the index of the appropriate column, or `None` if no such\ncolumn exists.",16,{"inputs":[{"name":"rowindex"},{"name":"statement"}],"output":{"name":"option"}}],[11,"fmt","","",17,{"inputs":[{"name":"rows"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"columns","","Returns a slice describing the columns of the `Rows`.",17,null],[11,"len","","Returns the number of rows present.",17,{"inputs":[{"name":"rows"}],"output":{"name":"usize"}}],[11,"get","","Returns a specific `Row`.",17,{"inputs":[{"name":"rows"},{"name":"usize"}],"output":{"name":"row"}}],[11,"iter","","Returns an iterator over the `Row`s.",17,{"inputs":[{"name":"rows"}],"output":{"name":"iter"}}],[11,"into_iter","","",17,{"inputs":[{"name":"rows"}],"output":{"name":"intoiter"}}],[11,"next","","",18,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",18,null],[11,"next_back","","",18,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",19,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",19,null],[11,"next_back","","",19,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"fmt","","",20,{"inputs":[{"name":"row"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Returns the number of values in the row.",20,{"inputs":[{"name":"row"}],"output":{"name":"usize"}}],[11,"columns","","Returns a slice describing the columns of the `Row`.",20,null],[11,"get_opt","","Retrieves the contents of a field of the row.",20,{"inputs":[{"name":"row"},{"name":"i"}],"output":{"name":"result"}}],[11,"get","","Retrieves the contents of a field of the row.",20,{"inputs":[{"name":"row"},{"name":"i"}],"output":{"name":"t"}}],[11,"get_bytes","","Retrieves the specified field as a raw buffer of Postgres data.",20,{"inputs":[{"name":"row"},{"name":"i"}],"output":{"name":"option"}}],[11,"drop","","",21,{"inputs":[{"name":"lazyrows"}],"output":null}],[11,"fmt","","",21,{"inputs":[{"name":"lazyrows"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"columns","","Returns a slice describing the columns of the `LazyRows`.",21,null],[11,"finish","","Consumes the `LazyRows`, cleaning up associated state.",21,{"inputs":[{"name":"lazyrows"}],"output":{"name":"result"}}],[11,"next","","",21,{"inputs":[{"name":"lazyrows"}],"output":{"name":"option"}}],[11,"size_hint","","",21,null],[0,"stmt","postgres","Prepared statements",null,null],[3,"Statement","postgres::stmt","A prepared statement.",null,null],[3,"Column","","Information about a column of the result of a query.",null,null],[3,"CopyInfo","","A struct containing information relevant for a `COPY` operation.",null,null],[4,"Format","","The format of a portion of COPY query data.",null,null],[13,"Text","","A text based format.",22,null],[13,"Binary","","A binary format.",22,null],[8,"ReadWithInfo","","Like `Read` except that a `CopyInfo` object is provided as well.",null,null],[10,"read_with_info","","Like `Read::read`.",23,null],[8,"WriteWithInfo","","Like `Write` except that a `CopyInfo` object is provided as well.",null,null],[10,"write_with_info","","Like `Write::write`.",24,null],[11,"fmt","","",25,{"inputs":[{"name":"statement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",25,{"inputs":[{"name":"statement"}],"output":null}],[11,"param_types","","Returns a slice containing the expected parameter types.",25,null],[11,"columns","","Returns a slice describing the columns of the result of the query.",25,null],[11,"execute","","Executes the prepared statement, returning the number of rows modified.",25,null],[11,"query","","Executes the prepared statement, returning the resulting rows.",25,null],[11,"lazy_query","","Executes the prepared statement, returning a lazily loaded iterator\nover the resulting rows.",25,null],[11,"copy_in","","Executes a `COPY FROM STDIN` statement, returning the number of rows\nadded.",25,null],[11,"copy_out","","Executes a `COPY TO STDOUT` statement, passing the resulting data to\nthe provided writer and returning the number of rows received.",25,null],[11,"finish","","Consumes the statement, clearing it from the Postgres session.",25,{"inputs":[{"name":"statement"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"column"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"column"}],"output":{"name":"column"}}],[11,"eq","","",26,{"inputs":[{"name":"column"},{"name":"column"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"column"},{"name":"column"}],"output":{"name":"bool"}}],[11,"format","","Returns the format of the overall data.",27,{"inputs":[{"name":"copyinfo"}],"output":{"name":"format"}}],[11,"column_formats","","Returns the format of the individual columns.",27,null],[11,"session_info","","Returns session info for the associated connection.",27,{"inputs":[{"name":"copyinfo"}],"output":{"name":"sessioninfo"}}],[11,"name","","The name of the column.",26,{"inputs":[{"name":"column"}],"output":{"name":"str"}}],[11,"type_","","The type of the data in the column.",26,{"inputs":[{"name":"column"}],"output":{"name":"type"}}],[11,"eq","","",22,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"fmt","","",22,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"types","postgres","Traits dealing with Postgres data types",null,null],[3,"Slice","postgres::types","An adapter type mapping slices to Postgres arrays.",null,null],[3,"SessionInfo","","A structure providing information for conversion methods.",null,null],[3,"Other","","Information about an unknown type.",null,null],[3,"WasNull","","An error indicating that a `NULL` Postgres value was passed to a `FromSql`\nimplementation that does not support `NULL` values.",null,null],[4,"Kind","","Represents the kind of a Postgres type.",null,null],[13,"Simple","","A simple type like `VARCHAR` or `INTEGER`.",28,null],[13,"Array","","An array type along with the type of its elements.",28,null],[13,"Range","","A range type along with the type of its elements.",28,null],[4,"Type","","A Postgres type.",null,null],[13,"Bool","","BOOL - boolean, 'true'/'false'",29,null],[13,"Bytea","","BYTEA - variable-length string, binary values escaped",29,null],[13,"Char","","\"char\" - single character",29,null],[13,"Name","","NAME - 63-byte type for storing system identifiers",29,null],[13,"Int8","","INT8/BIGINT - ~18 digit integer, 8-byte storage",29,null],[13,"Int2","","INT2/SMALLINT - -32 thousand to 32 thousand, 2-byte storage",29,null],[13,"Int2Vector","","INT2VECTOR - array of int2, used in system tables",29,null],[13,"Int4","","INT4/INT - -2 billion to 2 billion integer, 4-byte storage",29,null],[13,"Regproc","","REGPROC - registered procedure",29,null],[13,"Text","","TEXT - variable-length string, no limit specified",29,null],[13,"Oid","","OID - object identifier(oid), maximum 4 billion",29,null],[13,"Tid","","TID - (block, offset), physical location of tuple",29,null],[13,"Xid","","XID - transaction id",29,null],[13,"Cid","","CID - command identifier type, sequence in transaction id",29,null],[13,"OidVector","","OIDVECTOR - array of oids, used in system tables",29,null],[13,"PgType","","PG_TYPE",29,null],[13,"PgAttribute","","PG_ATTRIBUTE",29,null],[13,"PgProc","","PG_PROC",29,null],[13,"PgClass","","PG_CLASS",29,null],[13,"Json","","JSON",29,null],[13,"Xml","","XML - XML content",29,null],[13,"XmlArray","","XML[]",29,null],[13,"PgNodeTree","","PG_NODE_TREE - string representing an internal node tree",29,null],[13,"JsonArray","","JSON[]",29,null],[13,"Smgr","","SMGR - storage manager",29,null],[13,"Point","","POINT - geometric point '(x, y)'",29,null],[13,"Lseg","","LSEG - geometric line segment '(pt1,pt2)'",29,null],[13,"Path","","PATH - geometric path '(pt1,...)'",29,null],[13,"Box","","BOX - geometric box '(lower left,upper right)'",29,null],[13,"Polygon","","POLYGON - geometric polygon '(pt1,...)'",29,null],[13,"Line","","LINE - geometric line",29,null],[13,"LineArray","","LINE[]",29,null],[13,"Cidr","","CIDR - network IP address/netmask, network address",29,null],[13,"CidrArray","","CIDR[]",29,null],[13,"Float4","","FLOAT4/REAL - single-precision floating point number, 4-byte storage",29,null],[13,"Float8","","FLOAT8/DOUBLE PRECISION - double-precision floating point number, 8-byte storage",29,null],[13,"Abstime","","ABSTIME - absolute, limited-range date and time (Unix system time)",29,null],[13,"Reltime","","RELTIME - relative, limited-range date and time (Unix delta time)",29,null],[13,"Tinterval","","TINTERVAL - (abstime,abstime), time interval",29,null],[13,"Unknown","","UNKNOWN",29,null],[13,"Circle","","CIRCLE - geometric circle '(center,radius)'",29,null],[13,"CircleArray","","CIRCLE[]",29,null],[13,"Money","","MONEY - monetary amounts, $d,ddd.cc",29,null],[13,"MoneyArray","","MONEY[]",29,null],[13,"Macaddr","","MACADDR - XX:XX:XX:XX:XX:XX, MAC address",29,null],[13,"Inet","","INET - IP address/netmask, host address, netmask optional",29,null],[13,"BoolArray","","BOOL[]",29,null],[13,"ByteaArray","","BYTEA[]",29,null],[13,"CharArray","","\"char\"[]",29,null],[13,"NameArray","","NAME[]",29,null],[13,"Int2Array","","INT2[]",29,null],[13,"Int2VectorArray","","INT2VECTOR[]",29,null],[13,"Int4Array","","INT4[]",29,null],[13,"RegprocArray","","REGPROC[]",29,null],[13,"TextArray","","TEXT[]",29,null],[13,"TidArray","","TID[]",29,null],[13,"XidArray","","XID[]",29,null],[13,"CidArray","","CID[]",29,null],[13,"OidVectorArray","","OIDVECTOR[]",29,null],[13,"BpcharArray","","BPCHAR[]",29,null],[13,"VarcharArray","","VARCHAR[]",29,null],[13,"Int8Array","","INT8[]",29,null],[13,"PointArray","","POINT[]",29,null],[13,"LsegArray","","LSEG[]",29,null],[13,"PathArray","","PATH[]",29,null],[13,"BoxArray","","BOX[]",29,null],[13,"Float4Array","","FLOAT4[]",29,null],[13,"Float8Array","","FLOAT8[]",29,null],[13,"AbstimeArray","","ABSTIME[]",29,null],[13,"ReltimeArray","","RELTIME[]",29,null],[13,"TintervalArray","","TINTERVAL[]",29,null],[13,"PolygonArray","","POLYGON[]",29,null],[13,"OidArray","","OID[]",29,null],[13,"Aclitem","","ACLITEM - access control list",29,null],[13,"AclitemArray","","ACLITEM[]",29,null],[13,"MacaddrArray","","MACADDR[]",29,null],[13,"InetArray","","INET[]",29,null],[13,"Bpchar","","BPCHAR - char(length), blank-padded string, fixed storage length",29,null],[13,"Varchar","","VARCHAR - varchar(length), non-blank-padded string, variable storage length",29,null],[13,"Date","","DATE - date",29,null],[13,"Time","","TIME - time of day",29,null],[13,"Timestamp","","TIMESTAMP - date and time",29,null],[13,"TimestampArray","","TIMESTAMP[]",29,null],[13,"DateArray","","DATE[]",29,null],[13,"TimeArray","","TIME[]",29,null],[13,"TimestampTZ","","TIMESTAMPTZ - date and time with time zone",29,null],[13,"TimestampTZArray","","TIMESTAMPTZ[]",29,null],[13,"Interval","","INTERVAL - @ &lt;number&gt; &lt;units&gt;, time interval",29,null],[13,"IntervalArray","","INTERVAL[]",29,null],[13,"NumericArray","","NUMERIC[]",29,null],[13,"CstringArray","","CSTRING[]",29,null],[13,"Timetz","","TIMETZ - time of day with time zone",29,null],[13,"TimetzArray","","TIMETZ[]",29,null],[13,"Bit","","BIT - fixed-length bit string",29,null],[13,"BitArray","","BIT[]",29,null],[13,"Varbit","","VARBIT - variable-length bit string",29,null],[13,"VarbitArray","","VARBIT[]",29,null],[13,"Numeric","","NUMERIC - numeric(precision, decimal), arbitrary precision number",29,null],[13,"Refcursor","","REFCURSOR - reference to cursor (portal name)",29,null],[13,"RefcursorArray","","REFCURSOR[]",29,null],[13,"Regprocedure","","REGPROCEDURE - registered procedure (with args)",29,null],[13,"Regoper","","REGOPER - registered operator",29,null],[13,"Regoperator","","REGOPERATOR - registered operator (with args)",29,null],[13,"Regclass","","REGCLASS - registered class",29,null],[13,"Regtype","","REGTYPE - registered type",29,null],[13,"RegprocedureArray","","REGPROCEDURE[]",29,null],[13,"RegoperArray","","REGOPER[]",29,null],[13,"RegoperatorArray","","REGOPERATOR[]",29,null],[13,"RegclassArray","","REGCLASS[]",29,null],[13,"RegtypeArray","","REGTYPE[]",29,null],[13,"Record","","RECORD",29,null],[13,"Cstring","","CSTRING",29,null],[13,"Any","","ANY",29,null],[13,"AnyArray","","ANY[]",29,null],[13,"Void","","VOID",29,null],[13,"Trigger","","TRIGGER",29,null],[13,"LanguageHandler","","LANGUAGE_HANDLER",29,null],[13,"Internal","","INTERNAL",29,null],[13,"Opaque","","OPAQUE",29,null],[13,"Anyelement","","ANYELEMENT",29,null],[13,"RecordArray","","RECORD[]",29,null],[13,"Anynonarray","","ANYNONARRAY",29,null],[13,"TxidSnapshotArray","","TXID_SNAPSHOT[]",29,null],[13,"Uuid","","UUID - UUID datatype",29,null],[13,"TxidSnapshot","","TXID_SNAPSHOT - txid snapshot",29,null],[13,"UuidArray","","UUID[]",29,null],[13,"FdwHandler","","FDW_HANDLER",29,null],[13,"PgLsn","","PG_LSN - PostgreSQL LSN datatype",29,null],[13,"PgLsnArray","","PG_LSN[]",29,null],[13,"Anyenum","","ANYENUM",29,null],[13,"Tsvector","","TSVECTOR - text representation for text search",29,null],[13,"Tsquery","","TSQUERY - query representation for text search",29,null],[13,"Gtsvector","","GTSVECTOR - GiST index internal text representation for text search",29,null],[13,"TsvectorArray","","TSVECTOR[]",29,null],[13,"GtsvectorArray","","GTSVECTOR[]",29,null],[13,"TsqueryArray","","TSQUERY[]",29,null],[13,"Regconfig","","REGCONFIG - registered text search configuration",29,null],[13,"RegconfigArray","","REGCONFIG[]",29,null],[13,"Regdictionary","","REGDICTIONARY - registered text search dictionary",29,null],[13,"RegdictionaryArray","","REGDICTIONARY[]",29,null],[13,"Jsonb","","JSONB",29,null],[13,"Anyrange","","ANYRANGE",29,null],[13,"JsonbArray","","JSONB[]",29,null],[13,"Int4Range","","INT4RANGE - range of integers",29,null],[13,"Int4RangeArray","","INT4RANGE[]",29,null],[13,"NumRange","","NUMRANGE - range of numerics",29,null],[13,"NumRangeArray","","NUMRANGE[]",29,null],[13,"TsRange","","TSRANGE - range of timestamps without time zone",29,null],[13,"TsRangeArray","","TSRANGE[]",29,null],[13,"TstzRange","","TSTZRANGE - range of timestamps with time zone",29,null],[13,"TstzRangeArray","","TSTZRANGE[]",29,null],[13,"DateRange","","DATERANGE - range of dates",29,null],[13,"DateRangeArray","","DATERANGE[]",29,null],[13,"Int8Range","","INT8RANGE - range of bigints",29,null],[13,"Int8RangeArray","","INT8RANGE[]",29,null],[13,"EventTrigger","","EVENT_TRIGGER",29,null],[13,"Other","","An unknown type.",29,null],[4,"IsNull","","An enum representing the nullability of a Postgres value.",null,null],[13,"Yes","","The value is NULL.",30,null],[13,"No","","The value is not NULL.",30,null],[11,"from_sql","uuid","",31,{"inputs":[{"name":"uuid"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",31,{"inputs":[{"name":"uuid"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",31,{"inputs":[{"name":"uuid"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",31,{"inputs":[{"name":"uuid"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",31,{"inputs":[{"name":"uuid"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql","time","",32,{"inputs":[{"name":"timespec"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",32,{"inputs":[{"name":"timespec"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",32,{"inputs":[{"name":"timespec"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",32,{"inputs":[{"name":"timespec"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",32,{"inputs":[{"name":"timespec"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"fmt","postgres::types","",33,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_sql_checked","","",33,{"inputs":[{"name":"slice"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"to_sql","","",33,{"inputs":[{"name":"slice"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",33,{"inputs":[{"name":"slice"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_sql","serde::json::value","",34,{"inputs":[{"name":"value"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",34,{"inputs":[{"name":"value"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",34,{"inputs":[{"name":"value"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",34,{"inputs":[{"name":"value"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",34,{"inputs":[{"name":"value"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql","chrono::naive::datetime","",35,{"inputs":[{"name":"naivedatetime"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",35,{"inputs":[{"name":"naivedatetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",35,{"inputs":[{"name":"naivedatetime"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",35,{"inputs":[{"name":"naivedatetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",35,{"inputs":[{"name":"naivedatetime"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql","chrono::datetime","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",36,{"inputs":[{"name":"datetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",36,{"inputs":[{"name":"datetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql","","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",36,{"inputs":[{"name":"datetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",36,{"inputs":[{"name":"datetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql","","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",36,{"inputs":[{"name":"datetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",36,{"inputs":[{"name":"datetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",36,{"inputs":[{"name":"datetime"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql","chrono::naive::date","",37,{"inputs":[{"name":"naivedate"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",37,{"inputs":[{"name":"naivedate"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",37,{"inputs":[{"name":"naivedate"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",37,{"inputs":[{"name":"naivedate"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",37,{"inputs":[{"name":"naivedate"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql","chrono::naive::time","",38,{"inputs":[{"name":"naivetime"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",38,{"inputs":[{"name":"naivetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",38,{"inputs":[{"name":"naivetime"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",38,{"inputs":[{"name":"naivetime"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",38,{"inputs":[{"name":"naivetime"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[6,"Oid","postgres::types","A Postgres OID.",null,null],[8,"FromSql","","A trait for types that can be created from a Postgres value.",null,null],[11,"from_sql_nullable","","Creates a new value of this type from a `Read`er of Postgres data.",39,{"inputs":[{"name":"fromsql"},{"name":"type"},{"name":"option"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[10,"from_sql","","Creates a new value of this type from a `Read`er of the binary format\nof the specified Postgres `Type`.",39,{"inputs":[{"name":"fromsql"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[10,"accepts","","Determines if a value of this type can be created from the specified\nPostgres `Type`.",39,{"inputs":[{"name":"fromsql"},{"name":"type"}],"output":{"name":"bool"}}],[8,"ToSql","","A trait for types that can be converted into Postgres values.",null,null],[10,"to_sql","","Converts the value of `self` into the binary format of the specified\nPostgres `Type`, writing it to `out`.",40,{"inputs":[{"name":"tosql"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[10,"accepts","","Determines if a value of this type can be converted to the specified\nPostgres `Type`.",40,{"inputs":[{"name":"tosql"},{"name":"type"}],"output":{"name":"bool"}}],[10,"to_sql_checked","","An adaptor method used internally by Rust-Postgres.",40,{"inputs":[{"name":"tosql"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"parameter","","Returns the value of the specified Postgres backend parameter, such\nas `timezone` or `server_version`.",41,{"inputs":[{"name":"sessioninfo"},{"name":"str"}],"output":{"name":"option"}}],[11,"eq","","",28,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"kind"}],"output":{"name":"kind"}}],[11,"fmt","","",28,{"inputs":[{"name":"kind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"eq","","",29,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"oid","","Returns the OID of the `Type`.",29,{"inputs":[{"name":"type"}],"output":{"name":"oid"}}],[11,"kind","","The kind of this type.",29,{"inputs":[{"name":"type"}],"output":{"name":"kind"}}],[11,"fmt","","",42,{"inputs":[{"name":"other"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"other"}],"output":{"name":"other"}}],[11,"eq","","",42,{"inputs":[{"name":"other"},{"name":"other"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"other"},{"name":"other"}],"output":{"name":"bool"}}],[11,"name","","The name of the type.",42,{"inputs":[{"name":"other"}],"output":{"name":"str"}}],[11,"oid","","The OID of this type.",42,{"inputs":[{"name":"other"}],"output":{"name":"oid"}}],[11,"kind","","The kind of this type.",42,{"inputs":[{"name":"other"}],"output":{"name":"kind"}}],[11,"clone","","",43,{"inputs":[{"name":"wasnull"}],"output":{"name":"wasnull"}}],[11,"fmt","","",43,{"inputs":[{"name":"wasnull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"wasnull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",43,{"inputs":[{"name":"wasnull"}],"output":{"name":"str"}}],[11,"from_sql_nullable","core::option","",44,{"inputs":[{"name":"option"},{"name":"type"},{"name":"option"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql","","",44,{"inputs":[{"name":"option"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",44,{"inputs":[{"name":"option"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_sql","collections::vec","",45,{"inputs":[{"name":"vec"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",45,{"inputs":[{"name":"vec"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_sql","collections::string","",46,{"inputs":[{"name":"string"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",46,{"inputs":[{"name":"string"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_sql","std::collections::hash::map","",47,{"inputs":[{"name":"hashmap"},{"name":"type"},{"name":"r"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",47,{"inputs":[{"name":"hashmap"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","core::option","",44,{"inputs":[{"name":"option"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"to_sql","","",44,{"inputs":[{"name":"option"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",44,{"inputs":[{"name":"option"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","collections::vec","",45,{"inputs":[{"name":"vec"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"to_sql","","",45,{"inputs":[{"name":"vec"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",45,{"inputs":[{"name":"vec"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","collections::string","",46,{"inputs":[{"name":"string"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"to_sql","","",46,{"inputs":[{"name":"string"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",46,{"inputs":[{"name":"string"},{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","std::collections::hash::map","",47,{"inputs":[{"name":"hashmap"},{"name":"type"},{"name":"write"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"to_sql","","",47,{"inputs":[{"name":"hashmap"},{"name":"type"},{"name":"w"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"accepts","","",47,{"inputs":[{"name":"hashmap"},{"name":"type"}],"output":{"name":"bool"}}],[0,"notification","postgres","Asynchronous notifications.",null,null],[3,"Notification","postgres::notification","An asynchronous notification.",null,null],[12,"pid","","The process ID of the notifying backend process.",48,null],[12,"channel","","The name of the channel that the notify has been raised on.",48,null],[12,"payload","","The \"payload\" string passed from the notifying process.",48,null],[3,"Notifications","","An iterator over asynchronous notifications.",null,null],[3,"Iter","","An iterator over pending notifications.",null,null],[3,"BlockingIter","","An iterator over notifications which will block if none are pending.",null,null],[11,"fmt","","",48,{"inputs":[{"name":"notification"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"notification"}],"output":{"name":"notification"}}],[11,"fmt","","",49,{"inputs":[{"name":"notifications"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Returns the number of pending notifications.",49,{"inputs":[{"name":"notifications"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over pending notifications.",49,{"inputs":[{"name":"notifications"}],"output":{"name":"iter"}}],[11,"blocking_iter","","Returns an iterator over notifications, blocking until one is received\nif none are pending.",49,{"inputs":[{"name":"notifications"}],"output":{"name":"blockingiter"}}],[11,"next","","",50,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",51,{"inputs":[{"name":"blockingiter"}],"output":{"name":"option"}}],[6,"Result","postgres","A type alias of the result returned by many methods.",null,null],[8,"IntoConnectParams","","A trait implemented by types that can be converted into a `ConnectParams`.",null,null],[10,"into_connect_params","","Converts the value of `self` into a `ConnectParams`.",52,{"inputs":[{"name":"intoconnectparams"}],"output":{"name":"result"}}],[8,"HandleNotice","","Trait for types that can handle Postgres notice messages",null,null],[10,"handle_notice","","Handle a Postgres notice message",53,{"inputs":[{"name":"handlenotice"},{"name":"dberror"}],"output":null}],[8,"GenericConnection","","A trait allowing abstraction over connections and transactions",null,null],[10,"prepare","","Like `Connection::prepare`.",54,{"inputs":[{"name":"genericconnection"},{"name":"str"}],"output":{"name":"result"}}],[10,"prepare_cached","","Like `Connection::prepare_cached`.",54,{"inputs":[{"name":"genericconnection"},{"name":"str"}],"output":{"name":"result"}}],[10,"execute","","Like `Connection::execute`.",54,null],[10,"transaction","","Like `Connection::transaction`.",54,{"inputs":[{"name":"genericconnection"}],"output":{"name":"result"}}],[10,"batch_execute","","Like `Connection::batch_execute`.",54,{"inputs":[{"name":"genericconnection"},{"name":"str"}],"output":{"name":"result"}}],[10,"is_active","","Like `Connection::is_active`.",54,{"inputs":[{"name":"genericconnection"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"connecttarget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"connecttarget"}],"output":{"name":"connecttarget"}}],[11,"fmt","","",0,{"inputs":[{"name":"userinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"userinfo"}],"output":{"name":"userinfo"}}],[11,"fmt","","",1,{"inputs":[{"name":"connectparams"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"connectparams"}],"output":{"name":"connectparams"}}],[11,"into_connect_params","","",1,{"inputs":[{"name":"connectparams"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"loggingnoticehandler"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"loggingnoticehandler"}],"output":{"name":"loggingnoticehandler"}}],[11,"handle_notice","","",55,{"inputs":[{"name":"loggingnoticehandler"},{"name":"dberror"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"canceldata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"canceldata"}],"output":{"name":"canceldata"}}],[11,"eq","","",4,{"inputs":[{"name":"isolationlevel"},{"name":"isolationlevel"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"isolationlevel"},{"name":"isolationlevel"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"isolationlevel"}],"output":{"name":"isolationlevel"}}],[11,"fmt","","",4,{"inputs":[{"name":"isolationlevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"sslmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect","","Creates a new connection to a Postgres database.",56,{"inputs":[{"name":"connection"},{"name":"t"},{"name":"sslmode"}],"output":{"name":"result"}}],[11,"set_notice_handler","","Sets the notice handler for the connection, returning the old handler.",56,{"inputs":[{"name":"connection"},{"name":"box"}],"output":{"name":"box"}}],[11,"notifications","","Returns a structure providing access to asynchronous notifications.",56,{"inputs":[{"name":"connection"}],"output":{"name":"notifications"}}],[11,"prepare","","Creates a new prepared statement.",56,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"prepare_cached","","Creates cached prepared statement.",56,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"transaction","","Begins a new transaction.",56,{"inputs":[{"name":"connection"}],"output":{"name":"result"}}],[11,"set_transaction_isolation","","Sets the isolation level which will be used for future transactions.",56,{"inputs":[{"name":"connection"},{"name":"isolationlevel"}],"output":{"name":"result"}}],[11,"transaction_isolation","","Returns the isolation level which will be used for future transactions.",56,{"inputs":[{"name":"connection"}],"output":{"name":"result"}}],[11,"execute","","A convenience function for queries that are only run once.",56,null],[11,"batch_execute","","Execute a sequence of SQL statements.",56,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"cancel_data","","Returns information used to cancel pending queries.",56,{"inputs":[{"name":"connection"}],"output":{"name":"canceldata"}}],[11,"parameter","","Returns the value of the specified Postgres backend parameter, such as\n`timezone` or `server_version`.",56,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_desynchronized","","Returns whether or not the stream has been desynchronized due to an\nerror in the communication channel with the server.",56,{"inputs":[{"name":"connection"}],"output":{"name":"bool"}}],[11,"is_active","","Determines if the `Connection` is currently \"active\", that is, if there\nare no active transactions.",56,{"inputs":[{"name":"connection"}],"output":{"name":"bool"}}],[11,"finish","","Consumes the connection, closing it.",56,{"inputs":[{"name":"connection"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"transaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",57,{"inputs":[{"name":"transaction"}],"output":null}],[11,"prepare","","Like `Connection::prepare`.",57,{"inputs":[{"name":"transaction"},{"name":"str"}],"output":{"name":"result"}}],[11,"prepare_cached","","Like `Connection::prepare_cached`.",57,{"inputs":[{"name":"transaction"},{"name":"str"}],"output":{"name":"result"}}],[11,"execute","","Like `Connection::execute`.",57,null],[11,"batch_execute","","Like `Connection::batch_execute`.",57,{"inputs":[{"name":"transaction"},{"name":"str"}],"output":{"name":"result"}}],[11,"transaction","","Like `Connection::transaction`.",57,{"inputs":[{"name":"transaction"}],"output":{"name":"result"}}],[11,"connection","","Returns a reference to the `Transaction`'s `Connection`.",57,{"inputs":[{"name":"transaction"}],"output":{"name":"connection"}}],[11,"is_active","","Like `Connection::is_active`.",57,{"inputs":[{"name":"transaction"}],"output":{"name":"bool"}}],[11,"will_commit","","Determines if the transaction is currently set to commit or roll back.",57,{"inputs":[{"name":"transaction"}],"output":{"name":"bool"}}],[11,"set_commit","","Sets the transaction to commit at its completion.",57,{"inputs":[{"name":"transaction"}],"output":null}],[11,"set_rollback","","Sets the transaction to roll back at its completion.",57,{"inputs":[{"name":"transaction"}],"output":null}],[11,"commit","","A convenience method which consumes and commits a transaction.",57,{"inputs":[{"name":"transaction"}],"output":{"name":"result"}}],[11,"finish","","Consumes the transaction, commiting or rolling it back as appropriate.",57,{"inputs":[{"name":"transaction"}],"output":{"name":"result"}}],[11,"prepare","","",56,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"prepare_cached","","",56,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"execute","","",56,null],[11,"transaction","","",56,{"inputs":[{"name":"connection"}],"output":{"name":"result"}}],[11,"batch_execute","","",56,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_active","","",56,{"inputs":[{"name":"connection"}],"output":{"name":"bool"}}],[11,"prepare","","",57,{"inputs":[{"name":"transaction"},{"name":"str"}],"output":{"name":"result"}}],[11,"prepare_cached","","",57,{"inputs":[{"name":"transaction"},{"name":"str"}],"output":{"name":"result"}}],[11,"execute","","",57,null],[11,"transaction","","",57,{"inputs":[{"name":"transaction"}],"output":{"name":"result"}}],[11,"batch_execute","","",57,{"inputs":[{"name":"transaction"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_active","","",57,{"inputs":[{"name":"transaction"}],"output":{"name":"bool"}}],[14,"accepts!","","Generates a simple implementation of `ToSql::accepts` which accepts the\ntypes passed to it.",null,null],[14,"to_sql_checked!","","Generates an implementation of `ToSql::to_sql_checked`.",null,null],[11,"read","postgres::io","",58,null],[11,"write","","",58,null],[11,"flush","","",58,{"inputs":[{"name":"stream"}],"output":{"name":"result"}}],[11,"get_ref","","",58,{"inputs":[{"name":"stream"}],"output":{"name":"stream"}}],[11,"get_mut","","",58,{"inputs":[{"name":"stream"}],"output":{"name":"stream"}}],[11,"as_raw_fd","","",58,{"inputs":[{"name":"stream"}],"output":{"name":"rawfd"}}]],"paths":[[3,"UserInfo"],[3,"ConnectParams"],[3,"CancelData"],[4,"ConnectTarget"],[4,"IsolationLevel"],[4,"SslMode"],[4,"SqlState"],[4,"ConnectError"],[4,"ErrorPosition"],[4,"Error"],[3,"DbError"],[3,"Error"],[3,"SslStream"],[3,"SslContext"],[8,"StreamWrapper"],[8,"NegotiateSsl"],[8,"RowIndex"],[3,"Rows"],[3,"Iter"],[3,"IntoIter"],[3,"Row"],[3,"LazyRows"],[4,"Format"],[8,"ReadWithInfo"],[8,"WriteWithInfo"],[3,"Statement"],[3,"Column"],[3,"CopyInfo"],[4,"Kind"],[4,"Type"],[4,"IsNull"],[3,"Uuid"],[3,"Timespec"],[3,"Slice"],[4,"Value"],[3,"NaiveDateTime"],[3,"DateTime"],[3,"NaiveDate"],[3,"NaiveTime"],[8,"FromSql"],[8,"ToSql"],[3,"SessionInfo"],[3,"Other"],[3,"WasNull"],[4,"Option"],[3,"Vec"],[3,"String"],[3,"HashMap"],[3,"Notification"],[3,"Notifications"],[3,"Iter"],[3,"BlockingIter"],[8,"IntoConnectParams"],[8,"HandleNotice"],[8,"GenericConnection"],[3,"LoggingNoticeHandler"],[3,"Connection"],[3,"Transaction"],[3,"Stream"]]};
initSearch(searchIndex);
